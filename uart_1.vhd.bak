library IEEE;
use IEEE.std_logic_1164.all;
entity UART is
port (clk, resetN, RXD: in std_logic;
      data_out: out std_logic_vector(7 downto 0));
end;
architecture rec of UART is
constant FOSC: integer:=50000000;
constant Boud: integer:=9600;
constant T: integer:=FOSC/Boud;
type state_type is (s0,s1);
signal state: state_type;
signal Sbuf: std_logic_vector (7 downto 0);
signal cnt: integer range 0 to 10*T;
begin
 process (resetN, clk)
  begin
    if resetN='0' then state<=s0;
    elsif clk'event and clk='1' then 
      case state is
		 when s0=> cnt<=0;
		  if RXD='0' then state<=s1;
		  end if;
		 when s1=> if cnt<10*T then cnt<=cnt+1;
		  else state<=s0;
		 end if;
		if cnt=T/2 and RXD='1' then state<=s0;
		 elsif cnt=3*T/2 then Sbuf(0)<=RXD;
		  elsif cnt=5*T/2 then Sbuf(1)<=RXD;
		   elsif cnt=7*T/2 then Sbuf(2)<=RXD;
			 elsif cnt=9*T/2 then Sbuf(3)<=RXD;
			  elsif cnt=11*T/2 then Sbuf(4)<=RXD;
			   elsif cnt=13*T/2 then Sbuf(5)<=RXD;
				 elsif cnt=15*T/2 then Sbuf(6)<=RXD;
				  elsif cnt=17*T/2 then Sbuf(7)<=RXD;
				   elsif cnt=10*T then data_out<=Sbuf;
					state<=s0;
		end if;
	end case;
  end if;
 end process;
end;
